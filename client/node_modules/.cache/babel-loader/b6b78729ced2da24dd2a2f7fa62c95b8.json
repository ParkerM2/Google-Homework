{"ast":null,"code":"const axios = require('axios');\n\nconst db = require(\"../models\"); // methods for google api\n// findAll searches google books api and returns the entries we haven't saved\n// and makes sure the returned books contain title author link description and image\n\n\nmodule.exports = {\n  findAll: function (req, res) {\n    console.log(\"inside of api call\", params);\n    const {\n      query: params\n    } = req;\n    axios.get(\"https://www.googleapis.com/books/v1/volumes\", {\n      params\n    }).then(results => results.data.items.filter(results => results.volumeInfo.title && results.volumeInfo.infoLink && results.volumeInfo.authors && results.volumeInfo.description && results.volumeInfo.imageLinks && results.volumeInfo.imageLinks.thumbnail)).then(apiBooks => db.Book.find().then(dbBooks => apiBooks.filter(apiBook => dbBooks.every(dbBook => dbBook.googleId.toString() !== apiBook.googleId)))).then(books => res.json(books)).then(books => console.log(books)).catch(err => console.log(err));\n  }\n};","map":{"version":3,"sources":["C:/Users/Parke/Desktop/Google-Homework/google-homework/controllers/googleController.js"],"names":["axios","require","db","module","exports","findAll","req","res","console","log","params","query","get","then","results","data","items","filter","volumeInfo","title","infoLink","authors","description","imageLinks","thumbnail","apiBooks","Book","find","dbBooks","apiBook","every","dbBook","googleId","toString","books","json","catch","err"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,MAAMC,EAAE,GAAGD,OAAO,CAAC,WAAD,CAAlB,C,CAEA;AAEA;AACA;;;AAEAE,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,OAAO,EAAE,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCC,MAAlC;AACA,UAAM;AAAEC,MAAAA,KAAK,EAAED;AAAT,QAAoBJ,GAA1B;AACAN,IAAAA,KAAK,CAACY,GAAN,CAAU,6CAAV,EAAyD;AACrDF,MAAAA;AADqD,KAAzD,EAEGG,IAFH,CAGIC,OAAO,IACHA,OAAO,CAACC,IAAR,CAAaC,KAAb,CAAmBC,MAAnB,CACIH,OAAO,IACHA,OAAO,CAACI,UAAR,CAAmBC,KAAnB,IACAL,OAAO,CAACI,UAAR,CAAmBE,QADnB,IAEAN,OAAO,CAACI,UAAR,CAAmBG,OAFnB,IAGAP,OAAO,CAACI,UAAR,CAAmBI,WAHnB,IAIAR,OAAO,CAACI,UAAR,CAAmBK,UAJnB,IAKAT,OAAO,CAACI,UAAR,CAAmBK,UAAnB,CAA8BC,SAPtC,CAJR,EAaEX,IAbF,CAcIY,QAAQ,IAAIvB,EAAE,CAACwB,IAAH,CAAQC,IAAR,GAAed,IAAf,CAAoBe,OAAO,IACnCH,QAAQ,CAACR,MAAT,CAAgBY,OAAO,IACnBD,OAAO,CAACE,KAAR,CAAcC,MAAM,IAAIA,MAAM,CAACC,QAAP,CAAgBC,QAAhB,OAA+BJ,OAAO,CAACG,QAA/D,CADJ,CADQ,CAdhB,EAoBKnB,IApBL,CAoBUqB,KAAK,IAAI3B,GAAG,CAAC4B,IAAJ,CAASD,KAAT,CApBnB,EAqBKrB,IArBL,CAqBUqB,KAAK,IAAI1B,OAAO,CAACC,GAAR,CAAYyB,KAAZ,CArBnB,EAsBKE,KAtBL,CAsBWC,GAAG,IAAI7B,OAAO,CAACC,GAAR,CAAY4B,GAAZ,CAtBlB;AAuBH;AA3BY,CAAjB","sourcesContent":["const axios = require('axios');\r\nconst db = require(\"../models\");\r\n\r\n// methods for google api\r\n\r\n// findAll searches google books api and returns the entries we haven't saved\r\n// and makes sure the returned books contain title author link description and image\r\n\r\nmodule.exports = {\r\n    findAll: function (req, res) {\r\n        console.log(\"inside of api call\", params)\r\n        const { query: params } = req;\r\n        axios.get(\"https://www.googleapis.com/books/v1/volumes\", {\r\n            params\r\n        }).then(\r\n            results => \r\n                results.data.items.filter(\r\n                    results =>\r\n                        results.volumeInfo.title &&\r\n                        results.volumeInfo.infoLink &&\r\n                        results.volumeInfo.authors &&\r\n                        results.volumeInfo.description &&\r\n                        results.volumeInfo.imageLinks &&\r\n                        results.volumeInfo.imageLinks.thumbnail\r\n                )\r\n        ).then(\r\n            apiBooks => db.Book.find().then(dbBooks =>\r\n                apiBooks.filter(apiBook => \r\n                    dbBooks.every(dbBook => dbBook.googleId.toString() !== apiBook.googleId)\r\n                )\r\n            )\r\n        )\r\n            .then(books => res.json(books))\r\n            .then(books => console.log(books))\r\n            .catch(err => console.log(err))\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"script"}