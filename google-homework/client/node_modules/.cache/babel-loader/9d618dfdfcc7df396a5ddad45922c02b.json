{"ast":null,"code":"const express = require(\"express\");\n\nconst mongoose = require(\"mongoose\");\n\nconst routes = require(\"./routes\");\n\nconst app = express();\nconst PORT = process.env.PORT || 3000;\n\nconst path = require(\"path\"); //** need to go back and look these up and get a refresher **//\n\n\napp.use(express.urlencoded({\n  extended: true\n}));\napp.use(express.json()); // static \n\nif (process.env.NODE_ENV === \"production\") {\n  app.use(express.static(\"client/build\"));\n} // api / view routes\n\n\napp.use(routes); // mongodb+srv://Parker:<password>@cluster0.b3ah4.mongodb.net/<dbname>?retryWrites=true&w=majority\n// Connect to the MongoDB\n\nconst MongoClient = require('mongodb').MongoClient;\n\nconst uri = \"mongodb+srv://Parker:manningsigns1@cluster0.b3ah4.mongodb.net/Book?retryWrites=true&w=majority\";\nconst client = new MongoClient(uri, {\n  useNewUrlParser: true\n});\nclient.connect(err => {\n  const collection = client.db(\"test\").collection(\"devices\"); // perform actions on the collection object\n\n  client.close();\n}); // Define any API routes before this runs\n\napp.get(\"*\", (req, res) => {\n  res.sendFile(path.join(__dirname, \"./client/build/index.html\"));\n});\napp.listen(PORT, () => console.log(`Started on ${PORT}`));","map":{"version":3,"sources":["C:/Users/Parke/Desktop/Google-Homework/google-homework/server.js"],"names":["express","require","mongoose","routes","app","PORT","process","env","path","use","urlencoded","extended","json","NODE_ENV","static","MongoClient","uri","client","useNewUrlParser","connect","err","collection","db","close","get","req","res","sendFile","join","__dirname","listen","console","log"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,QAAQ,GAAGD,OAAO,CAAC,UAAD,CAAxB;;AACA,MAAME,MAAM,GAAGF,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAMG,GAAG,GAAGJ,OAAO,EAAnB;AACA,MAAMK,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYF,IAAZ,IAAoB,IAAjC;;AACA,MAAMG,IAAI,GAAGP,OAAO,CAAC,MAAD,CAApB,C,CAGA;;;AACAG,GAAG,CAACK,GAAJ,CAAQT,OAAO,CAACU,UAAR,CAAmB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAnB,CAAR;AACAP,GAAG,CAACK,GAAJ,CAAQT,OAAO,CAACY,IAAR,EAAR,E,CAEA;;AACA,IAAIN,OAAO,CAACC,GAAR,CAAYM,QAAZ,KAAyB,YAA7B,EAA2C;AACvCT,EAAAA,GAAG,CAACK,GAAJ,CAAQT,OAAO,CAACc,MAAR,CAAe,cAAf,CAAR;AACH,C,CAED;;;AACAV,GAAG,CAACK,GAAJ,CAAQN,MAAR,E,CAGA;AAEA;;AACA,MAAMY,WAAW,GAAGd,OAAO,CAAC,SAAD,CAAP,CAAmBc,WAAvC;;AACA,MAAMC,GAAG,GAAG,gGAAZ;AACA,MAAMC,MAAM,GAAG,IAAIF,WAAJ,CAAgBC,GAAhB,EAAqB;AAAEE,EAAAA,eAAe,EAAE;AAAnB,CAArB,CAAf;AACAD,MAAM,CAACE,OAAP,CAAeC,GAAG,IAAI;AACpB,QAAMC,UAAU,GAAGJ,MAAM,CAACK,EAAP,CAAU,MAAV,EAAkBD,UAAlB,CAA6B,SAA7B,CAAnB,CADoB,CAEpB;;AACAJ,EAAAA,MAAM,CAACM,KAAP;AACD,CAJD,E,CAQA;;AACAnB,GAAG,CAACoB,GAAJ,CAAQ,GAAR,EAAa,CAACC,GAAD,EAAMC,GAAN,KAAc;AACzBA,EAAAA,GAAG,CAACC,QAAJ,CAAanB,IAAI,CAACoB,IAAL,CAAUC,SAAV,EAAqB,2BAArB,CAAb;AACD,CAFD;AAIAzB,GAAG,CAAC0B,MAAJ,CAAWzB,IAAX,EAAiB,MAAM0B,OAAO,CAACC,GAAR,CAAa,cAAa3B,IAAK,EAA/B,CAAvB","sourcesContent":["const express = require(\"express\");\r\nconst mongoose = require(\"mongoose\");\r\nconst routes = require(\"./routes\")\r\nconst app = express();\r\nconst PORT = process.env.PORT || 3000;\r\nconst path = require(\"path\");\r\n\r\n\r\n//** need to go back and look these up and get a refresher **//\r\napp.use(express.urlencoded({ extended: true }));\r\napp.use(express.json());\r\n\r\n// static \r\nif (process.env.NODE_ENV === \"production\") {\r\n    app.use(express.static(\"client/build\"));\r\n}\r\n\r\n// api / view routes\r\napp.use(routes);\r\n\r\n\r\n// mongodb+srv://Parker:<password>@cluster0.b3ah4.mongodb.net/<dbname>?retryWrites=true&w=majority\r\n\r\n// Connect to the MongoDB\r\nconst MongoClient = require('mongodb').MongoClient;\r\nconst uri = \"mongodb+srv://Parker:manningsigns1@cluster0.b3ah4.mongodb.net/Book?retryWrites=true&w=majority\";\r\nconst client = new MongoClient(uri, { useNewUrlParser: true });\r\nclient.connect(err => {\r\n  const collection = client.db(\"test\").collection(\"devices\");\r\n  // perform actions on the collection object\r\n  client.close();\r\n});\r\n\r\n\r\n\r\n// Define any API routes before this runs\r\napp.get(\"*\", (req, res) => {\r\n  res.sendFile(path.join(__dirname, \"./client/build/index.html\"));\r\n});\r\n\r\napp.listen(PORT, () => console.log(`Started on ${PORT}`));"]},"metadata":{},"sourceType":"script"}